<div class=" row edit-title">
    <h3>Edit an attraction </h3>
</div>


<div class="row">
    <div class="col-md-6 edit-form">
        <select class="form-control" id="edit-attraction-city">
            <option selected disabled value="notChosen">Choose a city</option>
            {{!-- gen data --}}
            {{#each city}}
            <option value="{{id}}" {{genCitySelectString id ../attraction.0.cityid }}>{{name}}</option>
            {{/each}}

        </select>
        <div id="city-error-message"></div>

        <select class="form-control" id="edit-attraction-type">
            <option disabled value="notChosen" {{genAttractionSelectString "null" attraction.0.type }}>Choose a type</option>
            <option value="go" {{genAttractionSelectString "go" attraction.0.type}}>Tourist attraction</option>
            <option value="restaurant" {{genAttractionSelectString "restaurant" attraction.0.type}}>Restaurant</option>
            <option value="shop" {{genAttractionSelectString "shop" attraction.0.type}}>Shop</option>
        </select>
        <div id="type-error-message"></div>

        <input type="text" class="form-control" id="edit-attraction-name" placeholder="Attraction name" value="{{attraction.0.name}}">
        <div id="name-error-message"></div>

        <textarea class="form-control" id="edit-attraction-description" rows="3" placeholder="Describe the attraction">{{attraction.0.description}}</textarea>

        <div class="form-row align-items-center">

        <div class='col-2'>Location: </div>

        <div class='col-5'>
        <input type="text" class="form-control" id="edit-attraction-latitude" placeholder="Latitude" value="{{attraction.0.latitude}}">
        <div id="latitude-error-message"></div>
        </div>

        <div class='col-5'>
        <input type="text" class="form-control" id="edit-attraction-longitude" placeholder="Longitude" value="{{attraction.0.longitude}}">
        <div id="longitude-error-message"></div>
        </div>

        </div>

    </div>

    <div id="photo-upload-form" class="col-md-6 edit-form edit-form-right">
        <div class="edit-image-container" >
        
        <div id="edit-form-right" class="row" >
            {{!-- gen image here --}}
            
        </div>

        <div id="add-form-right" class="row" >
            {{!-- gen new image div --}}
            
        </div>
      

        <button class="btn btn-primary" id="add-image">+ Add image</button>

        
    </div>
    


    </div>
</div>

<div class="row d-flex justify-content-center">
    <button class="btn-lg btn-primary" id="submit-attraction">Submit<i class="fas fa-paper-plane"></i></button>
</div>

<script src="/js-file/edit-attraction.js"></script>

<script>
    $(() => {
        $.get(`/api/attraction-image/{{attraction.0.id}}`).then((data) => {
            data.forEach((value, index) => {
                $('#edit-form-right').append(attraction(value));
            });
        });

    })

    function isEmpty(obj) {
        for (var key in obj) {
            if (obj.hasOwnProperty(key))
                return false;
        }
        return true;
    }

    function updateAttraction() {

        let a=false;
        let b=false;
        let c=false;
        var formdata = new FormData();
        formArray.insertImage.forEach(function (element) {
            formdata.append('image', element.file);
       
        });
        //console.log(formdata);
        //formdata.append('image', formArray.insertImage[0].file);
        if (formArray.insertImage.length > 0) {
             addImageToAttractionImage('{{attraction.0.id}}', formdata);
        }

        if (!isEmpty(formArray.updateData)) {
            //console.log(formArray.updateData);
             updateAttractionContent(`/attraction/edit/{{attraction.0.id}}`);
        }

        if (formArray.deleteImage.length > 0) {
            deleteAttractionImage(formArray.deleteImage);
        }


        alert('Sucessfully updated this attraction!')
        window.location.replace(window.location.origin+`/profile`);

    }
    function addImageToAttractionImage(attractionID, formdata) {
        let ajaxUrl = '/api/attraction-image/';
        if (formArray.insertImage.length > 1) {
            ajaxUrl += `muti/${attractionID}`;
        } else {
            ajaxUrl += `single/${attractionID}`;
        }
        //console.log("ajaxUrl is : "+ajaxUrl);
        $.ajax({
            url: ajaxUrl,
            data: formdata,
            contentType: false,
            processData: false,
            type: 'POST',
            'success': function (data) {
            }})
            .then(function(){
    
            })
    
      
    }

    function updateAttractionContent(url) {


             axios({
            method: 'post',
            url: url,
            data: { formArray }
        })
            .then(function () {
         
            })

     
       
    }

    function deleteAttractionImage(ids) {
        
        axios({
            method: 'post',
            url: "/api/attraction-image/delete/",
            data: { ids }
        })
            .then(function () {
              
            })
       
    }
</script>

<script>
    let userId = {{ user.id }};

    function userAdd() {


        if ($('#edit-attraction-city').val() == null) {
            $('#edit-attraction-city').css('border-color', 'red');
            $('#city-error-message').html(`<p class="error-message">Choose a city</p>`)

        } else {
            $('#edit-attraction-city').css('border-color', '');
            $('#city-error-message').html(``)
        }

        if ($('#edit-attraction-type').val() == null) {
            $('#edit-attraction-type').css('border-color', 'red');
            $('#type-error-message').html(`<p class="error-message">Choose a type</p>`)
        } else {
            $('#edit-attraction-type').css('border-color', '');
            $('#type-error-message').html(``)
        }

        if ($('#edit-attraction-name').val() == null || $('#edit-attraction-name').val() === '') {
            $('#edit-attraction-name').css('border-color', 'red');
            $('#name-error-message').html(`<p class="error-message">Input a name</p>`)
        } else {
            $('#edit-attraction-name').css('border-color', '');
            $('#name-error-message').html(``)
        }

        if ($('#edit-attraction-name').val() != null && $('#edit-attraction-type').val() != null && $('#edit-attraction-name').val() != null || $('#edit-attraction-name').val() != '') {

            //console.log("333",$('#edit-attraction-type').val())
            axios({
                method: 'post',
                url: `/add/attraction`,
                data: { cityid: $('#edit-attraction-city').val(), name: $('#edit-attraction-name').val(), type: $('#edit-attraction-type').val(), latitude: 1.0, longitude: 1.0, image: null, description: $('#edit-attraction-description').val(), userid: userId }
            })
                .then(function () {
                    console.log('submited');

                })
        }


    }

</script>